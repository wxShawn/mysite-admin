import{a as u,f,d as B,u as W,g as C,l as P,a3 as T,h as b}from"./index.f2850c26.js";const z={headerFontSize1:"30px",headerFontSize2:"22px",headerFontSize3:"18px",headerFontSize4:"16px",headerFontSize5:"16px",headerFontSize6:"16px",headerMargin1:"28px 0 20px 0",headerMargin2:"28px 0 20px 0",headerMargin3:"28px 0 20px 0",headerMargin4:"28px 0 18px 0",headerMargin5:"28px 0 18px 0",headerMargin6:"28px 0 18px 0",headerPrefixWidth1:"16px",headerPrefixWidth2:"16px",headerPrefixWidth3:"12px",headerPrefixWidth4:"12px",headerPrefixWidth5:"12px",headerPrefixWidth6:"12px",headerBarWidth1:"4px",headerBarWidth2:"4px",headerBarWidth3:"3px",headerBarWidth4:"3px",headerBarWidth5:"3px",headerBarWidth6:"3px",pMargin:"16px 0 16px 0",liMargin:".25em 0 0 0",olPadding:"0 0 0 2em",ulPadding:"0 0 0 2em"},S=r=>{const{primaryColor:t,textColor2:e,borderColor:i,lineHeight:a,fontSize:o,borderRadiusSmall:n,dividerColor:d,fontWeightStrong:g,textColor1:l,textColor3:s,infoColor:h,warningColor:x,errorColor:p,successColor:c,codeColor:m}=r;return Object.assign(Object.assign({},z),{aTextColor:t,blockquoteTextColor:e,blockquotePrefixColor:i,blockquoteLineHeight:a,blockquoteFontSize:o,codeBorderRadius:n,liTextColor:e,liLineHeight:a,liFontSize:o,hrColor:d,headerFontWeight:g,headerTextColor:l,pTextColor:e,pTextColor1Depth:l,pTextColor2Depth:e,pTextColor3Depth:s,pLineHeight:a,pFontSize:o,headerBarColor:t,headerBarColorPrimary:t,headerBarColorInfo:h,headerBarColorError:p,headerBarColorWarning:x,headerBarColorSuccess:c,textColor:e,textColor1Depth:l,textColor2Depth:e,textColor3Depth:s,textColorPrimary:t,textColorInfo:h,textColorSuccess:c,textColorWarning:x,textColorError:p,codeTextColor:e,codeColor:m,codeBorder:"1px solid #0000"})},v={name:"Typography",common:u,self:S},y=v,F=f("a",`
 cursor: pointer;
 transition:
 color .3s var(--n-bezier),
 text-decoration-color .3s var(--n-bezier);
 text-decoration-color: var(--n-text-color);
 color: var(--n-text-color);
`),M=Object.assign({},C.props),D=B({name:"A",props:M,setup(r){const{mergedClsPrefixRef:t,inlineThemeDisabled:e}=W(r),i=C("Typography","-a",F,y,r,t),a=P(()=>{const{common:{cubicBezierEaseInOut:n},self:{aTextColor:d}}=i.value;return{"--n-text-color":d,"--n-bezier":n}}),o=e?T("a",void 0,a,r):void 0;return{mergedClsPrefix:t,cssVars:e?void 0:a,themeClass:o==null?void 0:o.themeClass,onRender:o==null?void 0:o.onRender}},render(){var r;return(r=this.onRender)===null||r===void 0||r.call(this),b("a",{class:[`${this.mergedClsPrefix}-a`,this.themeClass],style:this.cssVars},this.$slots)}});export{D as N};
